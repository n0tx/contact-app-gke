name: Build and Deploy to Docker Hub

on: [workflow_dispatch]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Get short SHA
      - name: Get short SHA
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      # Step 3: Set up JDK and Maven
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'

      # Step 4: Build Application
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build Docker Image
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/contact-app-gke:v1-${{ env.SHORT_SHA }} .

      # Step 7: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/contact-app-gke:v1-${{ env.SHORT_SHA }}

      # Step 8: Install gcloud and gke-gcloud-auth-plugin
      - name: Install gcloud and gke-gcloud-auth-plugin
        run: |
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            sudo apt-get install -y apt-transport-https ca-certificates gnupg
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk google-cloud-sdk-gke-gcloud-auth-plugin

      # Step 10: Authenticate with Google Cloud
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 11: Configure gcloud
      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud config set compute/zone ${{ secrets.ZONE }}
          gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 12: Deploy to GKE
      - name: Verify Kubernetes manifests
        run: |
          ls -la k8s/
          cat k8s/postgres-deployment.yaml
          cat k8s/contact-app-deployment.yaml

      - name: Apply Kubernetes configuration
        run: |
          kubectl apply -f k8s/postgres-deployment.yaml
          kubectl apply -f k8s/contact-app-deployment.yaml
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 9: Run envsubst
      - name: Run envsubst
        run: |
          sudo apt-get update
          sudo apt-get install gettext-base -y
          envsubst < k8s/contact-app-deployment.yaml > k8s/contact-app-deployment.yaml
        shell: bash
        env:
          SHORT_SHA: ${{ env.SHORT_SHA }}

