name: Build Test Spring Boot with PostgreSQL and Deploy to Docker Hub

on: [workflow_dispatch]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14
        env:
          POSTGRES_USER: springboot
          POSTGRES_PASSWORD: springboot
          POSTGRES_DB: contact
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U springboot -d contact"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      # Step 3: Build Application
      - name: Build with Maven
        run: mvn clean install

      # Step 4: Run Tests
      - name: Test with Maven
        run: mvn test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/contact
          SPRING_DATASOURCE_USERNAME: springboot
          SPRING_DATASOURCE_PASSWORD: springboot

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build Docker Image
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/contact-app-gke:v1-$SHORT_SHA .

      # Step 7: Push Docker Image to Docker Hub
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/contact-app-gke:v1-$SHORT_SHA